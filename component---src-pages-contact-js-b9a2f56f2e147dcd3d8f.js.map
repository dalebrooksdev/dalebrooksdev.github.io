{"version":3,"sources":["webpack:///./src/components/contact.js","webpack:///./src/pages/contact.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/dale_andrew_brooks_bitmoji.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/mainContent.js"],"names":["contact","react_default","a","createElement","className","href","target","ContactPage","layout","seo","title","mainContent","components_contact","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","p","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","src","avatar","alt","style","maxHeight","aria-label","gatsby_browser_entry","to","Layout","children","_856328897","header","class"],"mappings":"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","file":"component---src-pages-contact-js-b9a2f56f2e147dcd3d8f.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\n\nconst contact = () => (\n    <div className=\"text-xl leading-loose\">\n        <p className=\"\">hellodalebrooks@gmail.com</p>\n        <p className=\"mt-4\"><a href=\"https://www.twitter.com/andrew_brooksie\"\n            target=\"_blank\">@andrew_brooksie</a>\n        </p>\n    </div>\n)\n\nexport default contact\n\n\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport MainContent from \"../components/mainContent\"\nimport Contact from \"../components/contact\"\nimport SEO from \"../components/seo\"\n\nconst ContactPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <MainContent>\n      <Contact></Contact>\n    </MainContent>\n  </Layout>\n)\n\nexport default ContactPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/dale_andrew_brooks_bitmoji-5e8ac3580a232f161d3b8e4390a710b5.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport avatar from \"../images/dale_andrew_brooks_bitmoji.png\" // Tell Webpack this JS file uses this image\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"w-full lg:w-2/5 p-5\">\n    <div className=\"container flex justify-center lg:justify-start items-end flex-wrap\">\n      <img className=\"rounded-full mr-4 mb-4\" src={avatar}\n        alt=\"Avatar of Andrew Brooks\" style={{ maxHeight: 100 }} />\n      <div className=\"lg:text-left text-center mb-4\">\n        <div className=\"\">\n          <h1 className=\"text-gray-900 leading-none text-2xl mb-1\">Dale Andrew Brooks</h1>\n          <h2 className=\"text-gray-700 text-lg mb-1\">Full Stack Software Dev</h2>\n          <div className=\"text-2xl mb-1\">\n            <a href=\"https://www.twitter.com/andrew_brooksie\" target=\"_blank\"\n              aria-label=\"a link to my twitter! tweet tweet.\">\n              <i className=\"fab fa-twitter mr-2\"></i>\n            </a>\n            <a href=\"https://dev.to/andrew_brooksie\" target=\"_blank\" aria-label=\"a link to my dev.to account.\">\n              <i className=\"fab fa-dev mr-2\"></i>\n            </a>\n            <a href=\"https://github.com/dalebrooksdev\" target=\"_blank\" aria-label=\"a link to my github account\">\n              <i className=\"fab fa-github mr-2\"></i>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <ul className=\"flex mt-6 justify-center lg:justify-start\">\n      <li className=\"mr-6\">\n        <Link to=\"\">Home</Link>\n      </li>\n      <li className=\"mr-6\">\n        <Link to=\"/projects\">Projects</Link>\n      </li>\n      <li className=\"mr-6\">\n        <Link to=\"/articles\">Articles</Link>\n      </li>\n      <li className=\"\">\n        <Link to=\"/contact\">Contact</Link>\n      </li>\n    </ul>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport \"../fontawesome/css/all.min.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <body className=\"flex flex-wrap mb-4 container mx-auto mt-10\">\n      <Header siteTitle={data.site.siteMetadata.title} />\n        {children}\n        <footer>\n        </footer>\n    </body>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\n\nconst mainContent = ({ children }) => (\n    <div class=\"w-full lg:w-3/5 px-4\">\n        <div class=\"p-5\">\n            {children}\n        </div>\n    </div>\n)\n\nexport default mainContent\n\n"],"sourceRoot":""}